
# nolint examples:
# //nolint:funlen,maintidx // easy to understand
# revive seems to be only file scoped
# //revive:disable:flag-parameter names is needed

run:
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 3m

linters:
  fast: false
  # Enable all available linters.
  # Default: false
  enable-all: true

  disable:
    # - goerr113 # WIP
    - godox # prints all TODOs (and more) leave disabled

    ## rules I don't like
    - varnamelen
    - gomnd
    - gochecknoglobals
    - ireturn
    - nlreturn
    - exhaustruct
    - execinquery # postgresql allows RETURNING in INSERT
    - wsl
    - paralleltest
    - lll
    - gofumpt
    - godot
    - forbidigo
    - gci
    - gochecknoinits
    - dupword

    ## disabled for generics
    # https://github.com/golangci/golangci-lint/issues/2649
    - rowserrcheck
    - sqlclosecheck
    - wastedassign

    # deprecated
    - deadcode
    - structcheck
    - golint
    - nosnakecase
    - varcheck
    - scopelint
    - exhaustivestruct
    - interfacer
    - maligned
    - ifshort

linters-settings:
  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    # Such cases aren't reported by default.
    # Default: false
    check-type-assertions: true

  exhaustive:
    # Program elements to check for exhaustiveness.
    # Default: [ switch ]
    check:
      - switch
      - map
  
  # https://github.com/ldez/tagliatelle
  tagliatelle:
    case:
      rules:
        json: goSnake

  gocritic:
    # Settings passed to gocritic.
    # The settings key is the name of a supported gocritic checker.
    # The list of supported checkers can be find in https://go-critic.github.io/overview.
    settings:
      captLocal:
        # Whether to restrict checker to params only.
        # Default: true
        paramsOnly: false
      underef:
        # Whether to skip (*x).method() calls where x is a pointer receiver.
        # Default: true
        skipRecvDeref: false

  govet:
    # Enable all analyzers.
    # Default: false
    enable-all: true
    # Disable analyzers by name.
    # Run `go tool vet help` to see all analyzers.
    # Default: []
    disable:
      - fieldalignment # way too strict
    # Settings per analyzer.
    settings:
      shadow:
        # Whether to be strict about shadowing; can be noisy.
        # Default: false
        strict: true

  # funlen:
  #   # Checks the number of lines in a function.
  #   # If lower than 0, disable the check.
  #   # Default: 60
  #   lines: 150
  #   # Checks the number of statements in a function.
  #   # If lower than 0, disable the check.
  #   # Default: 40
  #   statements: 100

  # cyclop:
  #   # The maximal code complexity to report.
  #   # Default: 10
  #   max-complexity: 30
  #   # The maximal average package complexity.
  #   # If it's higher than 0.0 (float) the check is enabled
  #   # Default: 0.0
  #   package-average: 10

  godox:
    # report any comments starting with keywords, this is useful for TODO or FIXME comments that
    # might be left in the code accidentally and should be resolved before merging
    keywords: # default keywords are TODO, BUG, and FIXME, these can be overwritten by this setting
      - TODO
      - BUG
      - FIXME
      - NOTE
      - OPTIMIZE # marks code that should be optimized before merging
      - HACK # marks hacks that should be removed before merging

  # nestif:
  #   # default 4
  #   min-complexity: 7

  staticcheck:
    # SAxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: [ "*" ]
  
  wrapcheck:
    ignorePackageGlobs:
      - encoding/*

  revive:
    # https://github.com/mgechev/revive
    # Maximum number of open files at the same time.
    # See https://github.com/mgechev/revive#command-line-flags
    # Defaults to unlimited.
    #max-open-files: 2048

    # When set to false, ignores files with "GENERATED" header, similar to golint.
    # See https://github.com/mgechev/revive#available-rules for details.
    # Default: false
    ignore-generated-header: true

    # Sets the default severity.
    # See https://github.com/mgechev/revive#configuration
    # Default: warning
    #severity: error
  
    # Enable all available rules.
    # Default: false
    enable-all-rules: true

    # some rules require a config
    # provide minimal base config here to allow revive to work
    rules:
      - name: unhandled-error
        arguments:
          - "fmt.Printf"
          - "fmt.Println"
          - "fmt.Fprintf"
          - "fmt.Fprint"
      
      - name: function-result-limit
        arguments:
          - 3
      - name: argument-limit
        arguments:
          - 5
        disabled: true
      - name: max-public-structs
        disabled: true
      - name: cyclomatic
        disabled: true
      - name: file-header
        disabled: true
      - name: banned-characters
        disabled: true
      - name: function-length
        disabled: true
      - name: cognitive-complexity
        arguments:
          - 10
        # disabled: true
      - name: line-length-limit
        disabled: true
      - name: add-constant
        disabled: true

    # Sets the default failure confidence.
    # This means that linting errors with less than 0.8 confidence will be ignored.
    # Default: 0.8
    #confidence: 0.1


issues:
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 50

  exclude-rules:
    # - path: "path/to/file.go"
    #   linters: [ dupl ]